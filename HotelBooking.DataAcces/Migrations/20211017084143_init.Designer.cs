// <auto-generated />
using System;
using HotelBooking.DataAcces;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelBooking.DataAcces.Migrations
{
    [DbContext(typeof(HotelBookingDbContext))]
    [Migration("20211017084143_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelBooking.Model.Model.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllInclusive")
                        .HasColumnType("bit");

                    b.Property<bool>("Breakfast")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Pool")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<bool>("Transportation")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Weeks")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HotelBooking.Model.Model.Extra", b =>
                {
                    b.Property<int>("ExtraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ExtraId");

                    b.ToTable("Extras");
                });

            modelBuilder.Entity("HotelBooking.Model.Model.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            Address = "Torskarigatan 5",
                            Name = "Scandic Hotel"
                        },
                        new
                        {
                            HotelId = 2,
                            Address = "Moravägen 11G",
                            Name = "Sankt Olof Hotel"
                        },
                        new
                        {
                            HotelId = 3,
                            Address = "Grönlandsvägen 24",
                            Name = "Skinnargården"
                        });
                });

            modelBuilder.Entity("HotelBooking.Model.Model.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Beds")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("SQMeters")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Beds = 1,
                            HotelId = 1,
                            Price = 300.0,
                            Rating = 4.2999999999999998,
                            SQMeters = 15
                        },
                        new
                        {
                            RoomId = 2,
                            Beds = 2,
                            HotelId = 1,
                            Price = 400.0,
                            Rating = 3.7000000000000002,
                            SQMeters = 15
                        },
                        new
                        {
                            RoomId = 3,
                            Beds = 3,
                            HotelId = 1,
                            Price = 500.0,
                            Rating = 4.2000000000000002,
                            SQMeters = 15
                        },
                        new
                        {
                            RoomId = 4,
                            Beds = 1,
                            HotelId = 2,
                            Price = 300.0,
                            Rating = 4.2000000000000002,
                            SQMeters = 15
                        },
                        new
                        {
                            RoomId = 5,
                            Beds = 2,
                            HotelId = 2,
                            Price = 400.0,
                            Rating = 4.5,
                            SQMeters = 15
                        },
                        new
                        {
                            RoomId = 6,
                            Beds = 3,
                            HotelId = 2,
                            Price = 500.0,
                            Rating = 4.2999999999999998,
                            SQMeters = 15
                        },
                        new
                        {
                            RoomId = 7,
                            Beds = 1,
                            HotelId = 3,
                            Price = 300.0,
                            Rating = 3.5,
                            SQMeters = 15
                        },
                        new
                        {
                            RoomId = 8,
                            Beds = 2,
                            HotelId = 3,
                            Price = 400.0,
                            Rating = 2.7999999999999998,
                            SQMeters = 15
                        },
                        new
                        {
                            RoomId = 9,
                            Beds = 3,
                            HotelId = 3,
                            Price = 500.0,
                            Rating = 2.5,
                            SQMeters = 15
                        });
                });

            modelBuilder.Entity("HotelBooking.Model.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HotelBooking.Model.Model.Booking", b =>
                {
                    b.HasOne("HotelBooking.Model.Model.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBooking.Model.Model.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBooking.Model.Model.Room", b =>
                {
                    b.HasOne("HotelBooking.Model.Model.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelBooking.Model.Model.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelBooking.Model.Model.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HotelBooking.Model.Model.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
